@using Humate.WASM.Dtos.ApiModel.Permission
<!-- Sidebar -->
<aside class="flex-shrink-0 hidden w-64 bg-white border-r dark:border-primary-darker dark:bg-darker md:block">
    <div class="flex flex-col h-full">
        <!-- Sidebar links -->
        <nav aria-label="Main" class="flex-1 px-2 py-4 space-y-2 overflow-y-hidden hover:overflow-y-auto">
            @if (_rootElement != null)
            {
                foreach (var permission in Permissions.Where(i =>
                    i.ParentId == _rootElement.PermissionId).OrderBy(i=>i.SortOrder))
                {
                    <div x-data="{ isActive: false, open: false}">
                        <a href="#" x-on:click="$event.preventDefault(); open = !open"
                           class="flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-primary-100 dark:hover:bg-primary"
                           :class="{'bg-primary-100 dark:bg-primary': isActive || open}"
                           role="button" aria-haspopup="true" :aria-expanded="(open || isActive) ? 'true' : 'false'">
                            <span aria-hidden="true">
                                <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                                </svg>
                            </span>
                            <span class="ml-2 text-sm">@permission.Name</span>
                            <span class="ml-auto" aria-hidden="true">
                                <svg class="w-4 h-4 transition-transform transform" :class="{ 'rotate-180': open }"
                                     xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                </svg>
                            </span>
                        </a>
                        <div role="menu" x-show="open" class="mt-2 space-y-2 px-7" aria-label="@permission.Name">
                            @foreach (var child in permission.Childrens.Where(i =>
                               i.Type == PermissionType.MenuLink).OrderBy(i => i.SortOrder))
                            {
                                <a href="@child.Action"
                                   role="menuitem" class="block p-2 text-sm @(_currentUri.Equals(@child.Action,StringComparison.OrdinalIgnoreCase)?"text-gray-700":"text-gray-400") transition-colors duration-200 rounded-md
                                   dark:text-light dark:hover:text-light hover:text-gray-700">
                                    @child.Name
                                </a>
                            }
                        </div>
                    </div>
                }
            }
        </nav>

        <!-- Sidebar footer -->
        <div class="flex-shrink-0 px-2 py-4 space-y-2">
            <button x-on:click="openSettingsPanel"
                    type="button"
                    class="flex items-center justify-center w-full px-4 py-2 text-sm text-white rounded-md bg-primary hover:bg-primary-dark focus:outline-none focus:ring focus:ring-primary-dark focus:ring-offset-1 focus:ring-offset-white dark:focus:ring-offset-dark">
                <span aria-hidden="true">
                    <svg class="w-4 h-4 mr-2"
                         xmlns="http://www.w3.org/2000/svg"
                         fill="none"
                         viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4" />
                    </svg>
                </span>
                <span>Customize</span>
            </button>
        </div>
    </div>
</aside>


@code
{
    [Parameter]
    public IEnumerable<PermissionApiModel> Permissions { get; set; }

    private PermissionApiModel _rootElement = new PermissionApiModel();

    private string _currentUri = "";

    protected override async Task OnInitializedAsync()
    {
        Navigator.LocationChanged += OnLocationChanged;
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        _rootElement = Permissions?.FirstOrDefault(i => i.ParentId == Guid.Empty);
        await base.OnParametersSetAsync();
    }

    private void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        _currentUri = Navigator.ToBaseRelativePath(Navigator.Uri);
        StateHasChanged();
    }
}