@page "/softwareapikey"
@using Humate.WASM.Dtos.ApiModel.Software
@using Humate.WASM.Dtos.ApiModel.Software.Request
@using Humate.WASM.Dtos.ApiModel.Software.Response
@inject Clipboard Clipboard
<!-- Content header -->
<div class="flex items-center justify-between px-4 py-4 border-b lg:py-6 dark:border-primary-darker">
    <h1 class="text-2xl font-semibold">API key</h1>
    <a href="/softwarelist" class="px-4 py-2 text-sm text-white rounded-md bg-primary hover:bg-primary-dark focus:outline-none
           focus:ring focus:ring-primary focus:ring-offset-1 focus:ring-offset-white dark:focus:ring-offset-dark">Back To All Project</a>
</div>

<!-- Content -->
<div class="m-2">
    <!-- Table -->
    <div class="-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 pr-10 lg:px-8">
        <div class="align-middle rounded-tl-lg rounded-tr-lg border-b inline-block w-full py-4 overflow-hidden bg-white dark:bg-darker shadow-lg px-12">
            <div class="flex justify-between">
                <h1>Generate your new API Key for '@_software.Name' project.</h1>
            </div>
        </div>
        <div class="align-middle inline-block min-w-full shadow overflow-hidden bg-white dark:bg-darker shadow-dashboard px-8 pt-3 rounded-bl-lg rounded-br-lg">
            <div class="items-center justify-center overflow-y-auto">
                <div class="grid mt-8 gap-8 grid-cols-1">
                    <div class="flex flex-col ">
                        <div class="bg-white dark:bg-dark rounded-3xl p-4">
                            <div class="flex justify-center py-2">
                                <div class="flex bg-purple-200 rounded-full p-2 border-2 border-purple-300">
                                    @if (!string.IsNullOrEmpty(_loadedLogo))
                                    {
                                        <img src="@_loadedLogo" alt="Project Logo" class="w-20 h-20 rounded-full" />
                                    }
                                    else
                                    {
                                        <svg class="w-20 h-20 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path></svg>
                                    }
                                </div>
                            </div>
                            <div class="flex-auto ml-3 justify-evenly py-2">
                                <div class="flex">
                                    <div class="flex-1 items-center">
                                        <div class="text-xs font-medium">
                                            Project Name:
                                        </div>
                                        <h2 class="flex-auto text-lg text-black dark:text-light font-medium">@_software.Name</h2>
                                    </div>
                                    <div class="flex-1 items-center">
                                        <div class="text-xs text-blue-700 dark:text-light font-medium">
                                            Brand:
                                        </div>
                                        <h2 class="flex-auto text-lg text-black dark:text-light font-medium">@_software.Brand</h2>
                                    </div>
                                </div>
                                <hr class="mt-3" />
                                <div class="flex py-4 text-sm text-gray-600 dark:text-light ">
                                    <div class="flex-1 inline-flex items-center">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none"
                                             viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z">
                                            </path>
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                        </svg>
                                        <p class="">Cochin,KL</p>
                                    </div>
                                    <div class="flex-1 inline-flex items-center" title="Key Expire Date">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none"
                                             viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        <p class="">@_software.KeyExpire.UnixTimeStampToDateTime().ToString("MM/dd/yyyy")</p>
                                    </div>
                                </div>
                                <div class="flex py-4 text-sm text-gray-600 dark:text-light ">
                                    <div class="flex-1 inline-flex items-center">
                                        <p class="mr-5">Business Description:</p>
                                        <p>@_software.BusinessDescription</p>
                                    </div>
                                </div>
                                <div class="flex py-4 text-sm text-gray-600 dark:text-light ">
                                    <div class="flex-1 inline-flex items-center">
                                        <p class="mr-5">Current API Key:</p>
                                        <p class="mr-5 border py-2 px-4 bg-gray-100 text-black">@_software.ApiKey</p>
                                        <button title="Click to Copy" class="px-4 py-2 text-sm text-white inline-flex rounded-md bg-primary hover:bg-primary-dark focus:outline-none
           focus:ring focus:ring-primary focus:ring-offset-1 focus:ring-offset-white dark:focus:ring-offset-dark" type="button" @onclick="CopyToClipboard">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                                <hr class="mt-3" />
                                <div class="flex py-4 text-sm text-gray-600 dark:text-light ">
                                    <div class="flex-1 inline-flex items-center">
                                        <p class="mr-5">Expire Date:</p>
                                        <input class="mr-5 py-2 px-3 rounded-lg text-black border-2 border-primary mt-1 focus:outline-none
                               focus:ring-2 focus:ring-primary focus:border-transparent" type="date" @bind-value="_expireDate" />
                                        <button title="Generate your secret api key for this project"
                                                class="px-4 py-2 text-sm text-white inline-flex rounded-md bg-danger
                                                hover:bg-danger-dark focus:outline-none focus:ring focus:ring-danger
                                                focus:ring-offset-1 focus:ring-offset-white dark:focus:ring-offset-dark"
                                                type="button" @onclick="GenerateApiKey">
                                            Generate New API Key
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string _loadedLogo = "";
    private DateTime _expireDate = DateTime.Now.AddMonths(3);
    private SoftwareApiModel _software = new SoftwareApiModel();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ServiceHelper.ClearStack();
            ServiceHelper.CurrentProjectChangedAsync += LoadContentAsync;
            await LoadContentAsync();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task LoadContentAsync()
    {
        var result = await ApiManager.GetAsync<GetByIdResponse>(GlobalVariable.ApiBaseAddress,
            $"/api/identity/software/GetById/{await LocalStorage.GetItemAsStringAsync("CurrentProject")}",
            token: await LocalStorage.GetItemAsStringAsync("Token"));
        if (result.ResultCode != 0)
        {
            Toaster.ShowToast(ToastLevel.Error, result.Message, "Server Error");
            return;
        }
        _software = result.Software;
        StateHasChanged();
    }

    private async Task CopyToClipboard()
    {
        try
        {
            await Clipboard.WriteTextAsync(_software.ApiKey);
            Toaster.ShowToast(ToastLevel.Success, "Copy to Clipboard completed.", "Api Key");
        }
        catch
        {
            Toaster.ShowToast(ToastLevel.Error, "Cannot write text to clipboard", "Server Error");
        }
    }

    private async Task GenerateApiKey()
    {
        var result = await ApiManager.PostAsync<GenerateNewApiKeyResponse,GenerateNewApiKeyRequest>(GlobalVariable.ApiBaseAddress,
            $"/api/identity/software/GenerateNewApiKey",new GenerateNewApiKeyRequest
            {
                SoftwareId = (await LocalStorage.GetItemAsStringAsync("CurrentProject")).ToGuid(),
                ExpireDate = _expireDate
            },token: await LocalStorage.GetItemAsStringAsync("Token"));
        if (result.ResultCode != 0)
        {
            Toaster.ShowToast(ToastLevel.Error, result.Message, "Server Error");
            return;
        }
        _software.ApiKey = result.ApiKey;
        _software.KeyExpire = result.KeyExpireDate.ConvertToTimestamp();
        Toaster.ShowToast(ToastLevel.Success, "Your new 'API-Key' has been successfully generated, Keep it safe.", "Api Key");
    }
}
